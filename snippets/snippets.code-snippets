{
  "Console Log": {
    "prefix": "cl",
    "body": ["console.log('${1} =>', ${1})"]
  },
  "typescriptReactArrowFunctionComponent": {
    "prefix": "rf",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {}",
      "",
      "export const ${1:${TM_FILENAME_BASE}} = ({}: Props) => {",
      "  return (",
      "    ${0}",
      "  )",
      "}"
    ]
  },
  "typescriptReactArrowFunctionExportComponent": {
    "prefix": "rfe",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}: Props) => {",
      "  return (",
      "    ${0}",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState(${2})"]
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "  ${0}", "}, [${1}])"]
  },
  "useEffectReturn": {
    "prefix": "uer",
    "body": [
      "useEffect(() => {",
      "  ${2}",
      "",
      "  return () => {",
      "    ${3}",
      "  }",
      "}, [${1}])"
    ]
  },
  "useLayoutEffect": {
    "prefix": "ule",
    "body": ["useLayoutEffect(() => {", "  ${2}", "}, [${1}])"]
  },
  "useLayoutEffectReturn": {
    "prefix": "uler",
    "body": [
      "useLayoutEffect(() => {",
      "  ${2}",
      "",
      "  return () => {",
      "    ${3}",
      "  };",
      "}, [${1}])"
    ]
  },
  "method": {
    "prefix": "ha",
    "body": ["const ${1} = (${2}: ${3}) => {", "  ${0}", "}"],
    "description": "Creates a handler method"
  },
  "destructingObject": {
    "prefix": "dob",
    "body": ["const {${2:second}} = ${1:first}"],
    "description": "Creates and assigns a local variable using object destructing"
  },
  "destructingArray": {
    "prefix": "dar",
    "body": ["const [${2:second}] = ${1:first}"],
    "description": "Creates and assigns a local variable using array destructing"
  },
  "setInterval": {
    "prefix": "sti",
    "body": ["setInterval(() => { ", "  ${2}", "}, ${1})"],
    "description": "Executes the given function at specified intervals"
  },
  "setTimeOut": {
    "prefix": "sto",
    "body": ["setTimeout(() => { ", "  ${2}", "}, ${1})"],
    "description": "Executes the given function after the specified delay"
  },
  "RN StoryBook": {
    "prefix": "stb",
    "body": [
      "import { ComponentMeta, ComponentStory } from '@storybook/react-native'",
      "",
      "const Meta: ComponentMeta<typeof ${1:}> = {",
      "  title: '${2:}/${1:}',",
      "  component: ${1:},",
      "  args: {",
      "    ",
      "  },",
      "}",
      "",
      "export default Meta",
      "",
      "type T${1:}Story = ComponentStory<typeof ${1:}>",
      "",
      "export const Default: T${1:}Story = args => <${1:} {...args} />"
    ],
    "description": "Creates a storybook story"
  }
}
